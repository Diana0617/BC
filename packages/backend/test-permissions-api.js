/**
 * Test de los endpoints del API de permisos
 * Ejecutar con el servidor corriendo
 */

const axios = require('axios');

const API_URL = 'http://localhost:3001';

// Coloca aqu√≠ un token v√°lido de un usuario BUSINESS
const TOKEN = 'TU_TOKEN_AQUI'; // <-- Necesitas reemplazar esto

async function testPermissionsAPI() {
  try {
    console.log('üß™ Probando endpoints del API de permisos...\n');

    const headers = {
      'Authorization': `Bearer ${TOKEN}`,
      'Content-Type': 'application/json'
    };

    // 1. Obtener todos los permisos
    console.log('1Ô∏è‚É£ GET /api/permissions - Obtener todos los permisos');
    const allPerms = await axios.get(`${API_URL}/api/permissions`, { headers });
    console.log(`‚úÖ ${allPerms.data.data.length} permisos obtenidos\n`);

    // 2. Obtener permisos de una categor√≠a
    console.log('2Ô∏è‚É£ GET /api/permissions?category=appointments - Permisos de citas');
    const appointmentPerms = await axios.get(`${API_URL}/api/permissions?category=appointments`, { headers });
    console.log(`‚úÖ ${appointmentPerms.data.data.length} permisos de appointments\n`);

    // 3. Obtener permisos por defecto de un rol
    console.log('3Ô∏è‚É£ GET /api/permissions/role/SPECIALIST - Permisos por defecto de SPECIALIST');
    const roleDefaults = await axios.get(`${API_URL}/api/permissions/role/SPECIALIST`, { headers });
    console.log(`‚úÖ ${roleDefaults.data.data.length} permisos por defecto para SPECIALIST\n`);

    // 4. Obtener permisos agrupados
    console.log('4Ô∏è‚É£ GET /api/permissions/grouped - Permisos agrupados por categor√≠a');
    const grouped = await axios.get(`${API_URL}/api/permissions/grouped`, { headers });
    console.log(`‚úÖ Permisos agrupados en ${Object.keys(grouped.data.data).length} categor√≠as\n`);

    console.log('üéâ ¬°Todas las pruebas del API pasaron exitosamente!\n');
    console.log('üí° Para probar los endpoints de usuario (grant, revoke), necesitas:');
    console.log('   - businessId del usuario logueado');
    console.log('   - userId de un miembro del equipo');
    console.log('   - permissionKey para conceder/revocar');

  } catch (error) {
    if (error.response) {
      console.error('‚ùå Error:', error.response.status, error.response.data);
    } else {
      console.error('‚ùå Error:', error.message);
    }
  }
}

testPermissionsAPI();
